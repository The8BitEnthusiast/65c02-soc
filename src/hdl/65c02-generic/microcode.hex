/*
 * ALU operation:
 * ========================
 * 00---  pass
 * 01---  M
 * 10---  left
 * 11---  right
 * ========================
 * --000  R | M      OR
 * --001  R & M      AND
 * --010  R ^ M      EOR
 * --011  R + M      ADC
 * --100  R + 0      R or INC depending on CI
 * --101  R - 1      R or DEC depending on CI
 * --110  R - M      SBC/CMP
 * --111  R & M      TRB
 *
 */

/*
 *                           next[2:0]
 * us                        carry out      ci
 * ---------                 -------        --
 * 00  | SYNC                000 keep       00 = 0
 * 01  | NEXT                001 0          01 = 1
 * 11  | SAVE + NEXT         010 1          10 = C
 * 10  | LOAD                011 ALU
 *                           1xx PLP
 *
 */

// opcode dispatcher
//
// M = load M
// do = data output
// W  = write enable
// ab = address bus control
// us = flow control (see above)
// dst = destination register
// src = source register
// aluop = ALU operation (see above)
// ci = carry input select (see above)
// next = address of next microinstruction (or flags when SYNC)
//
//   +------------------------------+---------+
//   |  when used as flag  control: |VDIN&ZCCC|
//   +------------------------------+---------+
//   |Mdo Wab us dst src  aluop ci|  next   |
//   +---+-----+--+---+----+-----+--+---------+
//   |   |     |  |   |    |     |  |         |
@000  10011001011110011001010000011000     // BRK        -> @118
@001  10000011110000000011010000001101     // ORA (ZP,X) -> @10D
@004  10000011110000111101010000000010     // TSB ZP     -> @102 -> @155
@005  10000011110000111011010000000000     // ORA ZP     -> @100
@006  10000011110000111011000000000010     // ASL ZP     -> @102 -> @14C
@008  10011011011110011001010000010110     // PHP        -> @116
@009  10000100010000000000000001001101     // ORA IMM    -> @14D
@00A  11000100001100010101000000011011     // ASL A
@00C  10000100110000111101010000000100     // TSB ABS    -> @104 -> @155
@00D  10000100110000000011010000000001     // ORA ABS    -> @101
@00E  10000100110000111011000000000100     // ASL ABS    -> @104 -> @14C
@010  10000111010000000000000000000011     // BPL        -> @103
@011  10000011110000111011010000001111     // ORA (ZP),Y -> @10F
@012  10000011110000111011010000001101     // ORA (ZP)   -> @10D
@014  10000011110000111110000000000010     // TSB ZP     -> @102 -> @158
@015  10000011110000000011010000000000     // ORA ZP,X   -> @100
@016  10000011110000000011000000000010     // ASL ZP,X   -> @102 -> @14C
@018  10000100000000000000000000000011     // CLC
@019  10000100110000000011010000010010     // ORA ABS,Y  -> @112
@01A  11000100001100010001000100011000     // INA
@01C  10000100110000111110000000000100     // TRB ABS    -> @104 -> @158
@01D  10000100110000000011010000010001     // ORA ABS,X  -> @111
@01E  10000100110000111011000000000101     // ASL ABS,X  -> @105 -> @14C
@020  10011001011110011001010000001001     // JSR        -> @109
@021  10000011110000000010110000001101     // AND (ZP,X) -> @10D
@024  10000011110000111010100000000000     // BIT ZP     -> @100
@025  10000011110000111010110000000000     // AND ZP     -> @100
@026  10000011110000111100100000000010     // ROL ZP     -> @102 -> @152
@028  10000101011110011001000100010100     // PLP        -> @114
@029  10000100010000000000000001001011     // AND IMM    -> @14B
@02A  11000100001100010101001000011011     // ROL A
@02C  10000100110000111010100000000001     // BIT ABS    -> @101
@02D  10000100110000000010110000000001     // AND ABS    -> @101
@02E  10000100110000111100100000000100     // ROL ABS    -> @104 -> @152
@030  10000111010000000000000000000011     // BMI        -> @103
@031  10000011110000111010110000001111     // AND (ZP),Y -> @10F
@032  10000011110000111010110000001101     // AND (ZP)   -> @10D
@034  10000011110000000010100000000000     // BIT ZP,X   -> @100 -> @14A
@035  10000011110000000010110000000000     // AND ZP,X   -> @100 -> @14B
@036  10000011110000000100100000000010     // ROL ZP,X   -> @102 -> @152
@038  10000100000000111001010100000011     // SEC
@039  10000100110000000010110000010010     // AND ABS,Y  -> @112
@03A  11000100001100010001010000011000     // DEA
@03C  10000100110000000010100000010001     // BIT ABS,X  -> @111 -> @14A
@03D  10000100110000000010110000010001     // AND ABS,X  -> @111 -> @14B
@03E  10000100110000111100100000000101     // ROL ABS,X  -> @105 -> @152
@040  10000101011110011001000100011100     // RTI        -> @11C
@041  10000011110000000010010000001101     // EOR (ZP,X) -> @10D
@045  10000011110000111010010000000000     // EOR ZP     -> @100
@046  10000011110000111100110000000010     // LSR ZP     -> @102 -> @153
@048  10011011011110011001010001000110     // PHA        -> @146
@049  10000100010000000000000001001001     // EOR IMM    -> @149
@04A  11000100001100010111000000011011     // LSR A
@04C  10000100010000000000000000000110     // JMP ABS    -> @106
@04D  10000100110000000010010000000001     // EOR ABS    -> @101
@04E  10000100110000111100110000000100     // LSR ABS    -> @104 -> @153
@050  10000111010000000000000000000011     // BVC        -> @103
@051  10000011110000111010010000001111     // EOR (ZP),Y -> @10F
@052  10000011110000111010010000001101     // EOR (ZP)   -> @10D
@055  10000011110000000010010000000000     // EOR ZP,X   -> @100
@056  10000011110000000100110000000010     // LSR ZP,X   -> @102 -> @153
@058  10000100000000000000000000100000     // CLI
@059  10000100110000000010010000010010     // EOR ABS,Y  -> @112
@05A  10011011011110011001010001001000     // PHY        -> @148
@05D  10000100110000000010010000010001     // EOR ABS,X  -> @111
@05E  10000100110000111100110000000101     // LSR ABS,X  -> @105 -> @153
@060  10000101011110011001000100001011     // RTS        -> @10B
@061  10000011110000000000110000001101     // ADC (ZP,X) -> @10D
@064  10010011010000111000000001010110     // STZ ZP     -> @156
@065  10000011110000111000110000000000     // ADC ZP     -> @100
@066  10000011110000111101000000000010     // ROR ZP     -> @102 -> @154
@068  10000101011110011001000100000111     // PLA        -> @107
@069  10000100010000000000000001000011     // ADC IMM    -> @140
@06A  11000100001100010111001000011011     // ROR A
@06C  10000100010000000000110000100111     // JMP (ABS)  -> @127
@07C  10000100010000000000110000101101     // JMP (ABS,X)-> @12D
@06D  10000100110000000000110000000001     // ADC ABS    -> @101
@06E  10000100110000111101000000000100     // ROR ABS    -> @104 -> @154
@070  10000111010000000000000000000011     // BVS        -> @103
@071  10000011110000111000110000001111     // ADC (ZP),Y -> @10F
@072  10000011110000111000110000001101     // ADC (ZP)   -> @10D
@074  10010011010000000000000001010110     // STZ ZP,X   -> @156
@075  10000011110000000000110000000000     // ADC ZP,X   -> @100
@076  10000011110000000101000000000010     // ROR ZP,X   -> @102 -> @154
@078  10000100000000000000000000100000     // SEI
@079  10000100110000000000110000010010     // ADC ABS,Y  -> @112
@07A  10000101011110011001000100010011     // PLY        -> @113
@07D  10000100110000000000110000010001     // ADC ABS,X  -> @111
@07E  10000100110000111101000000000101     // ROR ABS,X  -> @105 -> @154
@080  10000111010000000000000000000011     // BRA        -> @103
@081  10000011110000000001100000100011     // STA (ZP,X) -> @123 -> @146
@084  10010011010000111000000001001000     // STY ZP     -> @148
@085  10010011010000111000000001000110     // STA ZP     -> @146
@086  10010011010000111000000001000111     // STX ZP     -> @147
@088  11000100001010001001010000011000     // DEY
@089  10000100010000000000000001010111     // BIT IMM    -> @157
@08A  11000100001100000001000000011000     // TXA
@08C  10000100110000111010000000100000     // STY ABS    -> @120 -> @148
@08D  10000100110000111001100000100000     // STA ABS    -> @120 -> @146
@08E  10000100110000111001110000100000     // STX ABS    -> @120 -> @147
@090  10000111010000000000000000000011     // BCC        -> @103
@091  10000011110000111001100000100101     // STA (ZP),Y -> @125 -> @146
@092  10000011110000111001100000100011     // STA (ZP)   -> @123 -> @146
@094  10010011010000000000000001001000     // STY ZP,X   -> @148
@095  10010011010000000000000001000110     // STA ZP,X   -> @146
@096  10010011010000001000000001000111     // STX ZP,Y   -> @147
@098  11000100001100001001000000011000     // TYA
@099  10000100110000111001100000100010     // STA ABS,Y  -> @122 -> @146
@09A  10000100001110000001000000000000     // TXS
@09C  10000100110000111101100000100000     // STZ ABS    -> @120 -> @156
@09D  10000100110000111001100000100001     // STA ABS,X  -> @121 -> @146
@09E  10000100110000111101100000100001     // STZ ABS,X  -> @121 -> @156
@0A0  10000100010000000000000001000010     // LDY IMM    -> @142
@0A1  10000011110000000000000000001101     // LDA (ZP,X) -> @10D
@0A2  10000100010000000000000001000001     // LDX IMM    -> @141
@0A4  10000011110000111000100000000000     // LDY ZP     -> @100 -> @142
@0A5  10000011110000111000000000000000     // LDA ZP     -> @100
@0A6  10000011110000111000010000000000     // LDX ZP     -> @100 -> @141
@0A8  11000100001010010001000000011000     // TAY
@0A9  10000100010000000000000001000000     // LDA IMM    -> @140
@0AA  11000100001000010001000000011000     // TAX
@0AC  10000100110000000000100000000001     // LDA ABS    -> @101 -> @142
@0AD  10000100110000000000000000000001     // LDY ABS    -> @101
@0AE  10000100110000000000010000000001     // LDX ABS    -> @101
@0B0  10000111010000000000000000000011     // BCS        -> @103
@0B1  10000011110000111000000000001111     // LDA (ZP),Y -> @10F
@0B2  10000011110000111000000000001101     // LDA (ZP)   -> @10D
@0B4  10000011110000000000100000000000     // LDY ZP,X   -> @100 -> @142
@0B5  10000011110000000000000000000000     // LDA ZP,X   -> @100
@0B6  10000011110000001000010000000000     // LDX ZP,Y   -> @100 -> @141
@0B8  10000100000000111000110010000000     // CLV
@0B9  10000100110000000000000000010010     // LDA ABS,Y  -> @112 -> @140
@0BA  11000100001000011001000000011000     // TSX
@0BC  10000100110000000000100000010001     // LDY ABS,X  -> @111
@0BD  10000100110000000000000000010001     // LDA ABS,X  -> @111
@0BE  10000100110000000000010000010010     // LDX ABS,Y  -> @112 -> @141
@0C0  10000100010000000000000001010001     // CPY IMM    -> @151
@0C1  10000011110000000011100000001101     // CMP (ZP,X) -> @10D
@0C4  10000011110000111100010000000000     // CPY ZP     -> @100 -> @151
@0C5  10000011110000111011100000000000     // CMP ZP     -> @100
@0C6  10000011110000111001010000000010     // DEC ZP     -> @102 -> @145
@0C8  11000100001010001001000100011000     // INY
@0C9  10000100010000000000000001001110     // CMP IMM    -> @14E
@0CA  11000100001000000001010000011000     // DEX
@0CC  10000100110000111100010000000001     // CPY ABS    -> @100 -> @151
@0CD  10000100110000000011100000000001     // CMP ABS    -> @101
@0CE  10000100110000111001010000000100     // DEC ABS    -> @104 -> @145
@0D0  10000111010000000000000000000011     // BNE        -> @103
@0D1  10000011110000111011100000001111     // CMP (ZP),Y -> @10F
@0D2  10000011110000111011100000001101     // CMP (ZP)   -> @10D
@0D5  10000011110000000011100000000000     // CMP ZP,X   -> @100
@0D6  10000011110000000001010000000010     // DEC ZP,X   -> @102
@0D8  10000100000000000000000001000000     // CLD
@0D9  10000100110000000011100000010010     // CMP ABS,Y  -> @112
@0DA  10011011011110011001010001000111     // PHX        -> @147
@0DD  10000100110000000011100000010001     // CMP ABS,X  -> @111
@0DE  10000100110000111001010000000101     // DEC ABS,X  -> @105 -> @145
@0E0  10000100010000000000000001010000     // CPX IMM    -> @150
@0E1  10000011110000000011110000001101     // SBC (ZP,X) -> @10D
@0E4  10000011110000111100000000000000     // CPX ZP     -> @100 -> @150
@0E5  10000011110000111011110000000000     // SBC ZP     -> @100
@0E6  10000011110000111001000000000010     // INC ZP     -> @102
@0E8  11000100001000000001000100011000     // INX
@0E9  10000100010000000000000001001111     // SBC IMM    -> @14F
@0EA  10000100000000000000000000000000     // NOP
@0EC  10000100110000111100000000000001     // CPX ABS    -> @100 -> @150
@0ED  10000100110000000011110000000001     // SBC ABS    -> @101
@0EE  10000100110000111001000000000100     // INC ABS    -> @104
@0F0  10000111010000000000000000000011     // BEQ        -> @103
@0F1  10000011110000111011110000001111     // SBC (ZP),Y -> @10F
@0F2  10000011110000111011110000001101     // SBC (ZP)   -> @10D
@0F5  10000011110000000011110000000000     // SBC ZP,X   -> @100
@0F6  10000011110000000001000000000010     // INC ZP,X   -> @102
@0F8  10000100000000000000000001000000     // SED
@0F9  10000100110000000011110000010010     // SBC ABS,Y  -> @112
@0FA  10000101011110011001000100001000     // PLX        -> @108
@0FD  10000100110000000011110000010001     // SBC ABS,X  -> @111
@0FE  10000100110000111001000000000101     // INC ABS,X  -> @105 -> @144

// preppers
@100  10000001100000000000000000000000     // DATA       -> FIN
@101  10000010010000111000000000000000     // ABS        -> @100
@102  10010000100000000000000000000000     // RMW
@103  10000100000000000000000000000000     // NOP
@104  10000010010000111000000000000010     // ABS RMW    -> @100
@105  10000010010000000000000000000010     // ABS,X RMW  -> @100
@106  10000010010000111000000000000011     // JMP ABS    -> @103
@107  10000001010000000000000001000000     // PLA        -> @140
@108  10000001010000000000000001000001     // PLX        -> @141
@109  11111000011110011001010000001010     // JSR        -> @10A
@10A  11000001010000000000000000000110     // JSR        -> @10A
@10B  10000101011110011001000100001100     // RTS        -> @10C
@10C  10001110010000111000000000000011     // RTS        -> @103
@10D  10001100010000000000000000001110     // (ZP)       -> @10E
@10E  10001010010000111000000000000000     // (ZP)       -> @100
@10F  10001100010000000000000000010000     // (ZP),Y     -> @110
@110  10001010010000001000000000000000     // (ZP),Y     -> @100
@111  10000010010000000000000000000000     // ABS,X      -> @100
@112  10000010010000001000000000000000     // ABS,Y      -> @100
@113  10000001010000000000000001000010     // PLY        -> @142
@114  10000001010000000000000000010101     // PLP        -> @115
@115  10100100000000111110110010010111     // PLP
@116  10100001010000000000000100000011     // PHP        -> @103 (B=1)
@117  11000100000000111000110100011000     // INC done 
@118  11111000011110011001010000011001     // BRK        -> @119
@119  11011000011110011001010000011010     // BRK        -> @11A
@11A  10101111010001010000000100011011     // BRK        -> @11B (B=1)
@11B  10001100010000000000000000101000     // BRK        -> @128
@11C  10000101011110011001000100011101     // RTI        -> @11D
@11D  00000101011110011001000100011110     // RTI        -> @11E (inh M)
@11E  00000010010000111110110000010101     // RTI        -> @115 (inh M)
//@11F  11000100000000111000000000011001     // NOP with NZC (using delayed carry/alu passes M)
@120  10010010100000111000000000000000     // STA ABS    -> FIN
@121  10010010100000000000000000000000     // STA ABS,X  -> FIN
@122  10010010100000001000000000000000     // STA ABS,Y  -> FIN
@123  10001100010000000000000000100100     // (ZP)       -> @124
@124  10011010100000111000000000000000     // (ZP)       -> FIN
@125  10001100010000000000000000100110     // (ZP),Y     -> @126
@126  10011010100000001000000000000000     // (ZP),Y     -> FIN
@127  10000010010000111000000000101110     // JMP (IND)  -> @11B
@128  10000010010000111000000000101001     // BRK JMP    -> @129
@129  10000100000000000000000001100000     // BRK JMP
@12A  11000100000000010000010000000000     // RMW with TSB/TRB
@12B  11000100000000110000110000011000     // DEC done 
@12C  11000100000000111100110000011011     // ASL done
@12D  10000010010000000000000000101110     // JMP (IND,X)-> @11B
@12E  10001100010000000000000000101111     // JMP (IND,X)-> @12F
@12F  10000010010000111000000000110000     // JMP (IND,X)-> @130
@130  10000100000000000000000000000000     // JMP (IND,X) 
@131  11000100000000111100111000011011     // ROL done
@132  11000100000000111110110000011011     // LSR done
@133  11000100000000111110111000011011     // ROR done

// finishers
@140  11000100001100111000000000011000     // LDA, SYNC
@141  11000100001000111000000000011000     // LDX, SYNC
@142  11000100001010111000000000011000     // LDY, SYNC
@143  11000100001100010000111110011011     // ADC, SYNC
@144  00000001010000111000110100010111     // INC, NZ    -> @117
@145  00000001010000110000110000101011     // DEC, NZ    -> @12B
@146  10000001010000010001000000000011     // STA, NOP   -> @103
@147  10000001010000000001000000000011     // STX, NOP   -> @103
@148  10000001010000001001000000000011     // STY, NOP   -> @103
@149  11000100001100010000100000011000     // EOR, SYNC
@14A  11100100000000010000010010001000     // BIT, SYNC
@14B  11000100001100010000010000011000     // AND, SYNC
@14C  00000001010000111100110000101100     // ASL, NZC   -> @12C
@14D  11000100001100010000000000011000     // ORA, SYNC
@14E  11000100000000010001100100011011     // CMP, SYNC
@14F  11000100001100010001101110011011     // SBC, SYNC
@150  11000100000000000001100100011011     // CPX, SYNC
@151  11000100000000001001100100011011     // CPY, SYNC
@152  00000001010000111100111000110001     // ROL, NZC   -> @131
@153  00000001010000111110110000110010     // LSR, NZC   -> @132
@154  00000001010000111110111000110011     // ROR, NZC   -> @133
@155  00000001010000010000000000101010     // TSB        -> @12A
@156  10000001010000111001000000000011     // STZ, NOP   -> @103
@157  11100100000000010000010000000000     // BIT IMM, SYNC
@158  00000001010000010001110000101010     // TRB        -> @12A

// IRQ handler
@160  10011000011110011001010001100001     // IRQ        -> @161
@161  11111000011110011001010001100010     // IRQ        -> @162
@162  11011000011110011001010001100011     // IRQ        -> @163
@163  10101111010001010000000001100100     // IRQ        -> @164 (B=0)
@164  10001100010000000000000001100101     // IRQ        -> @165
@165  10001010010000111000000001100110     // IRQ        -> @166
@166  10000100000000111000000001100000     // IRQ done

// NMI handler
@168  11111000011110011001010001101001     // NMI        -> @169
@169  11011000011110011001010001101010     // NMI        -> @16a
@16A  10101111010001000000000001101011     // NMI        -> @16b (B=0)
@16B  10001100010000000000000001101100     // NMI        -> @16c
@16C  10001010010000111000000001101101     // NMI        -> @16d
@16D  10000100000000111000000001100000     // NMI done

// reset handler
@170  10001111010001001000000001110001     // RESET      -> @171
@171  10000100010000111000000001110010     // RESET      -> @172
@172  10000010010000111000000001110011     // RESET      -> @173
@173  10000100000000111000000001110000     // RESET      -> @174

/*
 * The section 180-1FF repeats the section 100-17F, but 
 * with decimal mode enabled (D=1). Most will be the same, except for ADC/SBC. 
 * If you want, it's easy to modify behavior of any other instruction.
 */
@180  10000001100000000000000000000000     // DATA       -> FIN
@181  10000010010000111000000000000000     // ABS        -> @100
@182  10010000100000000000000000000000     // RMW
@183  10000100000000000000000000000000     // NOP
@184  10000010010000111000000000000010     // ABS RMW    -> @100
@185  10000010010000000000000000000010     // ABS,X RMW  -> @100
@186  10000010010000111000000000000011     // JMP ABS    -> @103
@187  10000001010000000000000001000000     // PLA        -> @140
@188  10000001010000000000000001000001     // PLX        -> @141
@189  11111000011110011001010000001010     // JSR        -> @10A
@18A  11000001010000000000000000000110     // JSR        -> @10A
@18B  10000101011110011001000100001100     // RTS        -> @10C
@18C  10001110010000111000000000000011     // RTS        -> @103
@18D  10001100010000000000000000001110     // (ZP)       -> @10E
@18E  10001010010000111000000000000000     // (ZP)       -> @100
@18F  10001100010000000000000000010000     // (ZP),Y     -> @110
@190  10001010010000001000000000000000     // (ZP),Y     -> @100
@191  10000010010000000000000000000000     // ABS,X      -> @100
@192  10000010010000001000000000000000     // ABS,Y      -> @100
@193  10000001010000000000000001000010     // PLY        -> @142
@194  10000001010000000000000000010101     // PLP        -> @115
@195  10100100000000111110110010010111     // PLP
@196  10100001010000000000000100000011     // PHP        -> @103 (B=1)
@197  11000100000000111000110100011000     // INC done 
@198  11111000011110011001010000011001     // BRK        -> @119
@199  11011000011110011001010000011010     // BRK        -> @11A
@19A  10101111010001010000000100011011     // BRK        -> @11B (B=1)
@19B  10001100010000000000000000101000     // BRK        -> @128
@19C  10000101011110011001000100011101     // RTI        -> @11D
@19D  00000101011110011001000100011110     // RTI        -> @11E (inh M)
@19E  00000010010000111110110000010101     // RTI        -> @115 (inh M)
//@19F  11000100000000111000000000011001     // NOP with NZC (using delayed carry/alu passes M)
@1A0  10010010100000111000000000000000     // STA ABS    -> FIN
@1A1  10010010100000000000000000000000     // STA ABS,X  -> FIN
@1A2  10010010100000001000000000000000     // STA ABS,Y  -> FIN
@1A3  10001100010000000000000000100100     // (ZP)       -> @124
@1A4  10011010100000111000000000000000     // (ZP)       -> FIN
@1A5  10001100010000000000000000100110     // (ZP),Y     -> @126
@1A6  10011010100000001000000000000000     // (ZP),Y     -> FIN
@1A7  10000010010000111000000000101110     // JMP (IND)  -> @12E
@1A8  10000010010000111000000000101001     // BRK JMP    -> @129
@1A9  10000100000000000000000001100000     // BRK JMP
@1AA  11000100000000010000010000000000     // RMW with TSB/TRB
@1AB  11000100000000110000110000011000     // DEC done 
@1AC  11000100000000111100110000011011     // ASL done
@1AD  10000010010000000000000000101110     // JMP (IND,X)-> @11B
@1AE  10001100010000000000000000101111     // JMP (IND,X)-> @12F
@1AF  10000010010000111000000000110000     // JMP (IND,X)-> @130
@1B0  10000100000000000000000000000000     // JMP (IND,X) 
@1B1  11000100000000111100111000011011     // ROL done
@1B2  11000100000000111110110000011011     // LSR done
@1B3  11000100000000111110111000011011     // ROR done

// finishers (decimal mode)
@1C0  11000100001100111000000000011000     // LDA, SYNC
@1C1  11000100001000111000000000011000     // LDX, SYNC
@1C2  11000100001010111000000000011000     // LDY, SYNC
@1C3  11000000011100010000111111011001     // ADC, SYNC  -> @1D9
@1C4  00000001010000111000110100010111     // INC, NZ    -> @117
@1C5  00000001010000110000110000101011     // DEC, NZ    -> @12B
@1C6  10000001010000010001000000000011     // STA, NOP   -> @103
@1C7  10000001010000000001000000000011     // STX, NOP   -> @103
@1C8  10000001010000001001000000000011     // STY, NOP   -> @103
@1C9  11000100001100010000100000011000     // EOR, SYNC
@1CA  11100100000000010000010010001000     // BIT, SYNC
@1CB  11000100001100010000010000011000     // AND, SYNC
@1CC  00000001010000111100110000101100     // ASL, NZC   -> @12C
@1CD  11000100001100010000000000011000     // ORA, SYNC
@1CE  11000100000000010001100100011011     // CMP, SYNC
@1CF  11000000011100010001101111011010     // SBC, SYNC  -> @1DA
@1D0  11000100000000000001100100011011     // CPX, SYNC
@1D1  11000100000000001001100100011011     // CPY, SYNC
@1D2  00000001010000111100111000110001     // ROL, NZC   -> @131
@1D3  00000001010000111110110000110010     // LSR, NZC   -> @132
@1D4  00000001010000111110111000110011     // ROR, NZC   -> @133
@1D5  00000001010000010000000000101010     // TSB        -> @12A
@1D6  10000001010000111001000000000011     // STZ, NOP   -> @103
@1D7  11100100000000010000010000000000     // BIT IMM, SYNC
@1D8  00000001010000010001110000101010     // TRB        -> @12A
@1D9  11000100001100010000110000011011     // ADC BCD ADJ
@1DA  11000100001100010001100100011011     // SBC BCD ADJ

// NMI handler, first cycle
@1E0  10011000011110011001010001101000     // NMI        -> @168

// IRQ handler, 2nd cycle when in decimal mode
@1E1  11111000011110011001010001100010     // IRQ        -> @162
@1E2  11011000011110011001010001100011     // IRQ        -> @163
@1E3  10101111010001010000000001100100     // IRQ        -> @164 (B=0)
@1E4  10001100010000000000000001100101     // IRQ        -> @165
@1E5  10001010010000111000000001100110     // IRQ        -> @166
@1E6  10000100000000111000000001100000     // IRQ done

// NMI handler, 2nd cycle decimal mode
@1E8  11111000011110011001010001101001     // NMI        -> @169
@1E9  11011000011110011001010001101010     // NMI        -> @16a
@1EA  10101111010001000000000001101011     // NMI        -> @16b (B=0)
@1EB  10001100010000000000000001101100     // NMI        -> @16c
@1EC  10001010010000111000000001101101     // NMI        -> @16d
@1ED  10000100000000111000000001100000     // NMI done

// reset handler
@1F0  10001111010001001000000001110001     // RESET      -> @171
@1F1  10000100010000111000000001110010     // RESET      -> @172
@1F2  10000010010000111000000001110011     // RESET      -> @173
@1F3  10000100000000111000000001110000     // RESET      -> @174

@1FF  00000000010000000000000001110000     // initial RESET
